{"ast":null,"code":"var _jsxFileName = \"/Users/ilyabrodovsky/Documents/react/react-practice-app/src/pages/PostIdPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostIdPage = () => {\n  _s();\n\n  const params = useParams();\n  const [post, setPost] = useState(null);\n  const [fetchPostById, isLoading, error] = useFetching(async id => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n  useEffect(() => {\n    fetchPostById(params.id);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u0412\\u044B \\u043E\\u0442\\u043A\\u0440\\u044B\\u043B\\u0438 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443 \", params.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [post.id, \". \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostIdPage, \"YY7e0nMW8z+3qDO6UIfV3npYIHs=\", false, function () {\n  return [useParams, useFetching];\n});\n\n_c = PostIdPage;\nexport default PostIdPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"sources":["/Users/ilyabrodovsky/Documents/react/react-practice-app/src/pages/PostIdPage.jsx"],"names":["React","useEffect","useState","useParams","PostService","Loader","useFetching","PostIdPage","params","post","setPost","fetchPostById","isLoading","error","id","response","getById","data","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,WAAT,QAA4B,sBAA5B;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACS,aAAD,EAAgBC,SAAhB,EAA2BC,KAA3B,IAAoCP,WAAW,CAAC,MAAOQ,EAAP,IAAc;AAClE,UAAMC,QAAQ,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoBF,EAApB,CAAvB;AACAJ,IAAAA,OAAO,CAACK,QAAQ,CAACE,IAAV,CAAP;AACD,GAHoD,CAArD;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,aAAa,CAACH,MAAM,CAACM,EAAR,CAAb;AACD,GAFQ,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA,8HAAyBN,MAAM,CAACM,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,SAAS,gBACR,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR;AAAA,iBACGH,IAAI,CAACK,EADR,QACcL,IAAI,CAACS,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAvBD;;GAAMX,U;UACWJ,S,EAE2BG,W;;;KAHtCC,U;AAyBN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport { useFetching } from \"../hooks/useFetching\";\nconst PostIdPage = () => {\n  const params = useParams();\n  const [post, setPost] = useState(null);\n  const [fetchPostById, isLoading, error] = useFetching(async (id) => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n  useEffect(() => {\n    fetchPostById(params.id);\n  });\n\n  return (\n    <div>\n      <h1>Вы открыли страницу {params.id}</h1>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div>\n          {post.id}. {post.title}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PostIdPage;\n"]},"metadata":{},"sourceType":"module"}