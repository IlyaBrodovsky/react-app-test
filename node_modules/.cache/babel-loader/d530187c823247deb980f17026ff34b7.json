{"ast":null,"code":"var _jsxFileName = \"/Users/ilyabrodovsky/Documents/react/react-practice-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from \"react\";\nimport PostFilter from \"./components/PostFilter\";\nimport PostForm from \"./components/PostForm\";\nimport PostList from \"./components/PostList\";\nimport MyInput from \"./components/UI/input/MyInput\";\nimport MySelect from \"./components/UI/select/MySelect\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([{\n    id: 1,\n    title: \"JavaScript\",\n    body: \"Description\"\n  }, {\n    id: 2,\n    title: \"Python\",\n    body: \"Description\"\n  }, {\n    id: 3,\n    title: \"C#\",\n    body: \"Description\"\n  }]);\n  const [filter, setFilter] = useState({\n    sort: \"\",\n    query: \"\"\n  });\n  const sortedPosts = useMemo(() => {\n    if (filter.sort) {\n      return [...posts].sort((a, b) => a[filter.sort].localeCompare(b[filter.sort]));\n    }\n\n    return posts;\n  }, [filter.sort, posts]);\n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(filter.query));\n  }, [filter.query, sortedPosts]);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  }; // получаем post из соседнего компонента\n\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"15px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), sortedAndSearchedPosts.length !== 0 ? /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"Посты про JS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"\\u041F\\u043E\\u0441\\u0442\\u044B \\u043D\\u0435 \\u0431\\u044B\\u043B\\u0438 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2iiu3MWvE6cDnkq3avnYjjyY/ac=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ilyabrodovsky/Documents/react/react-practice-app/src/App.js"],"names":["React","useMemo","useState","PostFilter","PostForm","PostList","MyInput","MySelect","App","posts","setPosts","id","title","body","filter","setFilter","sort","query","sortedPosts","a","b","localeCompare","sortedAndSearchedPosts","post","toLowerCase","includes","createPost","newPost","removePost","p","margin","length","textAlign"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport PostFilter from \"./components/PostFilter\";\nimport PostForm from \"./components/PostForm\";\nimport PostList from \"./components/PostList\";\nimport MyInput from \"./components/UI/input/MyInput\";\nimport MySelect from \"./components/UI/select/MySelect\";\nimport \"./styles/App.css\";\n\nfunction App() {\n  const [posts, setPosts] = useState([\n    { id: 1, title: \"JavaScript\", body: \"Description\" },\n    { id: 2, title: \"Python\", body: \"Description\" },\n    { id: 3, title: \"C#\", body: \"Description\" },\n  ]);\n\n  const [filter, setFilter] = useState({ sort: \"\", query: \"\" });\n\n  const sortedPosts = useMemo(() => {\n    if (filter.sort) {\n      return [...posts].sort((a, b) =>\n        a[filter.sort].localeCompare(b[filter.sort])\n      );\n    }\n    return posts;\n  }, [filter.sort, posts]);\n\n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter((post) =>\n      post.title.toLowerCase().includes(filter.query)\n    );\n  }, [filter.query, sortedPosts]);\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n  };\n  // получаем post из соседнего компонента\n  const removePost = (post) => {\n    setPosts(posts.filter((p) => p.id !== post.id));\n  };\n\n  return (\n    <div className=\"App\">\n      <PostForm create={createPost} />\n      <hr style={{ margin: \"15px 0\" }} />\n      <PostFilter filter={filter} setFilter={setFilter} />\n      {sortedAndSearchedPosts.length !== 0 ? (\n        <PostList\n          remove={removePost}\n          posts={sortedAndSearchedPosts}\n          title={\"Посты про JS\"}\n        />\n      ) : (\n        <h2 style={{ textAlign: \"center\" }}>Посты не были найдены</h2>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}