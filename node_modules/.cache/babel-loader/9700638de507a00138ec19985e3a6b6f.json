{"ast":null,"code":"var _jsxFileName = \"/Users/ilyabrodovsky/Documents/react/react-practice-app/src/components/UI/select/MySelect.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MySelect = _ref => {\n  let {\n    options,\n    defaultValue,\n    value,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    value: value,\n    onChange: event => onChange(event.target.value),\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      disabled: true,\n      value1: \"value1\",\n      children: defaultValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.value,\n      children: option.name\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MySelect;\nexport default MySelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"MySelect\");","map":{"version":3,"sources":["/Users/ilyabrodovsky/Documents/react/react-practice-app/src/components/UI/select/MySelect.jsx"],"names":["React","MySelect","options","defaultValue","value","onChange","event","target","map","option","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAG,QAAgD;AAAA,MAA/C;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,KAAzB;AAAgCC,IAAAA;AAAhC,GAA+C;AAC/D,sBACE;AACA,IAAA,KAAK,EAAED,KADP;AAEA,IAAA,QAAQ,EAAEE,KAAK,IAAID,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaH,KAAd,CAF3B;AAAA,4BAKE;AAAQ,MAAA,QAAQ,EAAE,IAAlB;AAAwB,MAAA,MAAM,EAAC,QAA/B;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA,YALF,EAQGD,OAAO,CAACM,GAAR,CAAaC,MAAD,iBACX;AAAQ,MAAA,KAAK,EAAEA,MAAM,CAACL,KAAtB;AAAA,gBACGK,MAAM,CAACC;AADV,OAAkCD,MAAM,CAACL,KAAzC;AAAA;AAAA;AAAA;AAAA,YADD,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjBD;;KAAMH,Q;AAmBN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\n\nconst MySelect = ({ options, defaultValue, value, onChange }) => {\n  return (\n    <select \n    value={value} \n    onChange={event => onChange(event.target.value)}\n\n    >\n      <option disabled={true} value1=\"value1\">\n        {defaultValue}\n      </option>\n      {options.map((option) => (\n        <option value={option.value} key={option.value}>\n          {option.name}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default MySelect;\n"]},"metadata":{},"sourceType":"module"}