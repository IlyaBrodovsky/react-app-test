{"ast":null,"code":"var _jsxFileName = \"/Users/ilyabrodovsky/Documents/react/react-practice-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from \"react\";\nimport PostForm from \"./components/PostForm\";\nimport PostList from \"./components/PostList\";\nimport MyInput from \"./components/UI/input/MyInput\";\nimport MySelect from \"./components/UI/select/MySelect\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([{\n    id: 1,\n    title: \"JavaScript\",\n    body: \"Description\"\n  }, {\n    id: 2,\n    title: \"Python\",\n    body: \"Description\"\n  }, {\n    id: 3,\n    title: \"C#\",\n    body: \"Description\"\n  }]);\n  const [selectedSort, setSelectedSort] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const sortedPosts = useMemo(() => {\n    if (selectedSort) {\n      return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n    }\n\n    return posts;\n  }, [selectedSort, posts]);\n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter(post => post.title.includes(searchQuery));\n  }, [searchQuery, sortedPosts]);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  }; // получаем post из соседнего компонента\n\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  const sortPosts = sort => {\n    setSelectedSort(sort);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MyInput, {\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n        value: selectedSort,\n        onChange: sortPosts,\n        defaultValue: 'Сортировка по',\n        options: [{\n          value: 'title',\n          name: 'По названию'\n        }, {\n          value: 'body',\n          name: 'По описанию'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), posts.length !== 0 ? /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"Посты про JS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"\\u041F\\u043E\\u0441\\u0442\\u044B \\u043D\\u0435 \\u0431\\u044B\\u043B\\u0438 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OrAvfQeEFVJ17UxqGq/Oq//nxDw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ilyabrodovsky/Documents/react/react-practice-app/src/App.js"],"names":["React","useMemo","useState","PostForm","PostList","MyInput","MySelect","App","posts","setPosts","id","title","body","selectedSort","setSelectedSort","searchQuery","setSearchQuery","sortedPosts","sort","a","b","localeCompare","sortedAndSearchedPosts","filter","post","includes","createPost","newPost","removePost","p","sortPosts","margin","e","target","value","name","length","textAlign"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport PostForm from \"./components/PostForm\";\nimport PostList from \"./components/PostList\";\nimport MyInput from \"./components/UI/input/MyInput\";\nimport MySelect from \"./components/UI/select/MySelect\";\nimport \"./styles/App.css\";\n\nfunction App() {\n  const [posts, setPosts] = useState([\n    { id: 1, title: \"JavaScript\", body: \"Description\" },\n    { id: 2, title: \"Python\", body: \"Description\" },\n    { id: 3, title: \"C#\", body: \"Description\" },\n  ]);\n  const [selectedSort, setSelectedSort] = useState('')\n  const [searchQuery, setSearchQuery] = useState('')\n\n\n  const sortedPosts = useMemo(() => {\n    if (selectedSort) {\n      return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]))\n    }\n    return posts\n  }, [selectedSort, posts])\n  \n  const sortedAndSearchedPosts = useMemo( () => {\n    return sortedPosts.filter(post => post.title.includes(searchQuery))\n  }, [searchQuery, sortedPosts] )\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n  };\n  // получаем post из соседнего компонента\n  const removePost = (post) => {\n    setPosts(posts.filter((p) => p.id !== post.id));\n  };\n\n  const sortPosts = (sort) => {\n    setSelectedSort(sort)\n  }\n\n  return (\n    <div className=\"App\">\n      <PostForm create={createPost} />\n      <hr style={{margin: '15px 0'}} />\n      <div>\n        <MyInput\n          placeholder='Поиск...'\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n        />\n        <MySelect\n          value={selectedSort}\n          onChange={sortPosts}\n          defaultValue={'Сортировка по'}\n          options = {[\n            {value: 'title', name: 'По названию'},\n            {value: 'body', name: 'По описанию'}\n            ]}\n\n        />\n      </div>\n      {posts.length !== 0 ? (\n        <PostList remove={removePost} posts={sortedAndSearchedPosts} title={\"Посты про JS\"} />\n      ) : (\n        <h2 style={{ textAlign: \"center\" }}>Посты не были найдены</h2>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}