{"ast":null,"code":"var _jsxFileName = \"/Users/ilyabrodovsky/Documents/react/react-practice-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PostFilter from \"./components/PostFilter\";\nimport PostForm from \"./components/PostForm\";\nimport PostList from \"./components/PostList\";\nimport MyButton from \"./components/UI/button/MyButton\";\nimport MyModal from \"./components/UI/MyModal/MyModal\";\nimport { usePosts } from \"./hooks/usePost\";\nimport \"./styles/App.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: \"\",\n    query: \"\"\n  });\n  const [modal, setModal] = useState(false);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  async function fetchPosts() {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts`);\n    setPosts(response.data);\n  } // получаем post из соседнего компонента\n\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchPosts,\n      children: \"GET POST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: \"30px\"\n      },\n      onClick: () => setModal(true),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"15px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"Посты про JS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/sx8cDL7tMDYrBX2nf8rQmV03Dc=\", false, function () {\n  return [usePosts];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ilyabrodovsky/Documents/react/react-practice-app/src/App.js"],"names":["React","useState","PostFilter","PostForm","PostList","MyButton","MyModal","usePosts","axios","App","posts","setPosts","filter","setFilter","sort","query","modal","setModal","sortedAndSearchedPosts","createPost","newPost","fetchPosts","response","get","data","removePost","post","p","id","marginTop","margin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAmB,OAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC;AAAEa,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAD,CAApC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAMiB,sBAAsB,GAAGX,QAAQ,CAACG,KAAD,EAAQE,MAAM,CAACE,IAAf,EAAqBF,MAAM,CAACG,KAA5B,CAAvC;;AAEA,QAAMI,UAAU,GAAIC,OAAD,IAAa;AAC9BT,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWU,OAAX,CAAD,CAAR;AACAH,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAHD;;AAKA,iBAAeI,UAAf,GAA6B;AAC3B,UAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,4CAAX,CAAvB;AACAZ,IAAAA,QAAQ,CAACW,QAAQ,CAACE,IAAV,CAAR;AACD,GAfY,CAiBb;;;AACA,QAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3Bf,IAAAA,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAce,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASF,IAAI,CAACE,EAAlC,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACA;AAAQ,MAAA,OAAO,EAAEP,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEQ,QAAAA,SAAS,EAAE;AAAb,OAAjB;AAAwC,MAAA,OAAO,EAAE,MAAMZ,QAAQ,CAAC,IAAD,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAED,KAAlB;AAAyB,MAAA,UAAU,EAAEC,QAArC;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,MAAM,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AAAI,MAAA,KAAK,EAAE;AAAEW,QAAAA,MAAM,EAAE;AAAV;AAAX;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAElB,MAApB;AAA4B,MAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,YATF,eAWE,QAAC,QAAD;AACE,MAAA,MAAM,EAAEY,UADV;AAEE,MAAA,KAAK,EAAEP,sBAFT;AAGE,MAAA,KAAK,EAAE;AAHT;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAzCQT,G;UAKwBF,Q;;;KALxBE,G;AA2CT,eAAeA,GAAf","sourcesContent":["import React, {useState } from \"react\";\nimport PostFilter from \"./components/PostFilter\";\nimport PostForm from \"./components/PostForm\";\nimport PostList from \"./components/PostList\";\nimport MyButton from \"./components/UI/button/MyButton\";\nimport MyModal from \"./components/UI/MyModal/MyModal\";\nimport { usePosts } from \"./hooks/usePost\";\nimport \"./styles/App.css\";\nimport axios  from \"axios\";\n\nfunction App() {\n  const [posts, setPosts] = useState([ ]);\n\n  const [filter, setFilter] = useState({ sort: \"\", query: \"\" });\n  const [modal, setModal] = useState(false);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  async function fetchPosts () {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts`)\n    setPosts(response.data)\n  }\n\n  // получаем post из соседнего компонента\n  const removePost = (post) => {\n    setPosts(posts.filter((p) => p.id !== post.id));\n  };\n\n  return (\n    <div className=\"App\">\n    <button onClick={fetchPosts}>GET POST</button>\n      <MyButton style={{ marginTop: \"30px\" }} onClick={() => setModal(true)}>\n        Создать пользователя\n      </MyButton>\n      <MyModal visible={modal} setVisible={setModal}>\n        <PostForm create={createPost} />\n      </MyModal>\n      <hr style={{ margin: \"15px 0\" }} />\n      <PostFilter filter={filter} setFilter={setFilter} />\n\n      <PostList\n        remove={removePost}\n        posts={sortedAndSearchedPosts}\n        title={\"Посты про JS\"}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}