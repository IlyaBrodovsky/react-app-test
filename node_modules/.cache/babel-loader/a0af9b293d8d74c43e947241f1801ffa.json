{"ast":null,"code":"var _jsxFileName = \"/Users/ilyabrodovsky/Documents/react/react-practice-app/src/components/AppRouter.jsx\";\nimport React from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport About from \"../pages/About\";\nimport Error from \"../pages/Error\";\nimport Login from \"../pages/Login\";\nimport PostIdPage from \"../pages/PostIdPage\";\nimport Posts from \"../pages/Posts\";\nimport { privateRoutes, publicRoutes } from \"../router/routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  const isAuth = true;\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [publicRoutes.map(route => {\n      /*#__PURE__*/\n      _jsxDEV(Route, {\n        path: route.path,\n        element: route.component\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/about\",\n      element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 54\n      }, this)\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/posts\",\n      element: /*#__PURE__*/_jsxDEV(Posts, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 54\n      }, this)\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/posts/:id\",\n      element: /*#__PURE__*/_jsxDEV(PostIdPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 58\n      }, this)\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 54\n      }, this)\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/404\",\n      element: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 52\n      }, this)\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        replace: true,\n        to: \"/404\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 49\n      }, this)\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n};\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["/Users/ilyabrodovsky/Documents/react/react-practice-app/src/components/AppRouter.jsx"],"names":["React","Navigate","Route","Routes","About","Error","Login","PostIdPage","Posts","privateRoutes","publicRoutes","AppRouter","isAuth","map","route","path","component"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,kBAA5C;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,MAAM,GAAG,IAAf;AACA,sBAEI,QAAC,MAAD;AAAA,eACCF,YAAY,CAACG,GAAb,CAAiBC,KAAK,IAAI;AACzB;AAAA,cAAC,KAAD;AAAO,QAAA,IAAI,EAAEA,KAAK,CAACC,IAAnB;AAAyB,QAAA,OAAO,EAAED,KAAK,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA;AACD,KAFA,CADD,eAIA,QAAC,KAAD;AAAwB,MAAA,IAAI,EAAC,QAA7B;AAAsC,MAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA/C,OAAYF,KAAK,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA,QAAC,KAAD;AAAwB,MAAA,IAAI,EAAC,QAA7B;AAAsC,MAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA/C,OAAYD,KAAK,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA,YALA,eAMA,QAAC,KAAD;AAAwB,MAAA,IAAI,EAAC,YAA7B;AAA0C,MAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAnD,OAAYD,KAAK,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA,YANA,eAOA,QAAC,KAAD;AAAwB,MAAA,IAAI,EAAC,QAA7B;AAAsC,MAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA/C,OAAYD,KAAK,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA,YAPA,eAQA,QAAC,KAAD;AAAwB,MAAA,IAAI,EAAC,MAA7B;AAAoC,MAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA7C,OAAYD,KAAK,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA,YARA,eASA,QAAC,KAAD;AAAwB,MAAA,IAAI,EAAC,GAA7B;AAAiC,MAAA,OAAO,eAAE,QAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAkB,QAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AAA1C,OAAYD,KAAK,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA,YATA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgBD,CAlBD;;KAAMJ,S;AAoBN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport About from \"../pages/About\";\nimport Error from \"../pages/Error\";\nimport Login from \"../pages/Login\";\nimport PostIdPage from \"../pages/PostIdPage\";\nimport Posts from \"../pages/Posts\";\nimport { privateRoutes, publicRoutes } from \"../router/routes\";\n\nconst AppRouter = () => {\n  const isAuth = true;  \n  return (\n      \n      <Routes>\n      {publicRoutes.map(route => {\n        <Route path={route.path} element={route.component} />\n      })}\n      <Route key={route.path} path=\"/about\" element={<About />} />\n      <Route key={route.path} path=\"/posts\" element={<Posts />} />\n      <Route key={route.path} path=\"/posts/:id\" element={<PostIdPage />} />\n      <Route key={route.path} path=\"/login\" element={<Login />} />\n      <Route key={route.path} path=\"/404\" element={<Error />} />\n      <Route key={route.path} path=\"*\" element={<Navigate replace to=\"/404\" />} />\n\n      \n    </Routes>\n  );\n};\n\nexport default AppRouter;\n"]},"metadata":{},"sourceType":"module"}