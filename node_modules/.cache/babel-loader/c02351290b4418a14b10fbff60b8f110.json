{"ast":null,"code":"var _jsxFileName = \"/Users/ilyabrodovsky/Documents/react/react-practice-app/src/components/AppRouter.jsx\";\nimport React from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport About from \"../pages/About\";\nimport Error from \"../pages/Error\";\nimport Login from \"../pages/Login\";\nimport PostIdPage from \"../pages/PostIdPage\";\nimport Posts from \"../pages/Posts\";\nimport { privateRoutes, publicRoutes } from \"../router/routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  const isAuth = true;\n  return isAuth ? /*#__PURE__*/_jsxDEV(Routes, {\n    children: privateRoutes.map(route => {\n      /*#__PURE__*/\n      _jsxDEV(Route, {\n        path: route.path,\n        element: route.component\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n    children: publicRoutes.map(route => {\n      /*#__PURE__*/\n      _jsxDEV(Route, {\n        path: route.path,\n        element: route.component\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this)\n  /* <Routes>\n    <Route path=\"/about\" element={<About />} />\n    <Route path=\"/posts\" element={<Posts />} />\n    <Route path=\"/posts/:id\" element={<PostIdPage />} />\n    <Route path=\"/login\" element={<Login />} />\n    <Route path=\"/404\" element={<Error />} />\n    <Route path=\"*\" element={<Navigate replace to=\"/404\" />} />\n     \n    \n  </Routes> */\n  ;\n};\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["/Users/ilyabrodovsky/Documents/react/react-practice-app/src/components/AppRouter.jsx"],"names":["React","Navigate","Route","Routes","About","Error","Login","PostIdPage","Posts","privateRoutes","publicRoutes","AppRouter","isAuth","map","route","path","component"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,kBAA5C;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,MAAM,GAAG,IAAf;AACA,SACIA,MAAM,gBACJ,QAAC,MAAD;AAAA,cACKH,aAAa,CAACI,GAAd,CAAkBC,KAAK,IAAI;AACxB;AAAA,cAAC,KAAD;AAAO,QAAA,IAAI,EAAEA,KAAK,CAACC,IAAnB;AAAyB,QAAA,OAAO,EAAED,KAAK,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA;AACT,KAFM;AADL;AAAA;AAAA;AAAA;AAAA,UADI,gBAMJ,QAAC,MAAD;AAAA,cACKN,YAAY,CAACG,GAAb,CAAiBC,KAAK,IAAI;AACvB;AAAA,cAAC,KAAD;AAAO,QAAA,IAAI,EAAEA,KAAK,CAACC,IAAnB;AAAyB,QAAA,OAAO,EAAED,KAAK,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA;AACT,KAFM;AADL;AAAA;AAAA;AAAA;AAAA;AAMJ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBE;AAyBD,CA3BD;;KAAML,S;AA6BN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport About from \"../pages/About\";\nimport Error from \"../pages/Error\";\nimport Login from \"../pages/Login\";\nimport PostIdPage from \"../pages/PostIdPage\";\nimport Posts from \"../pages/Posts\";\nimport { privateRoutes, publicRoutes } from \"../router/routes\";\n\nconst AppRouter = () => {\n  const isAuth = true;  \n  return (\n      isAuth\n      ? <Routes>\n            {privateRoutes.map(route => {\n                <Route path={route.path} element={route.component} />\n      })}\n      </Routes>\n      : <Routes>\n            {publicRoutes.map(route => {\n                <Route path={route.path} element={route.component} />\n      })}\n      </Routes>\n\n    /* <Routes>\n      <Route path=\"/about\" element={<About />} />\n      <Route path=\"/posts\" element={<Posts />} />\n      <Route path=\"/posts/:id\" element={<PostIdPage />} />\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/404\" element={<Error />} />\n      <Route path=\"*\" element={<Navigate replace to=\"/404\" />} />\n\n      \n      \n    </Routes> */\n  );\n};\n\nexport default AppRouter;\n"]},"metadata":{},"sourceType":"module"}