{"ast":null,"code":"var _jsxFileName = \"/Users/ilyabrodovsky/Documents/react/react-practice-app/src/pages/PostIdPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostIdPage = () => {\n  _s();\n\n  const params = useParams();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [fetchPostById, isLoading, error] = useFetching(async id => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n  const [fetchComments, isComLoading, comError] = useFetching(async id => {\n    const response = await PostService.getCommentsByPostId(id);\n    setComments(response.data);\n  });\n  useEffect(() => {\n    fetchPostById(params.id);\n    fetchComments(params.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u0412\\u044B \\u043E\\u0442\\u043A\\u0440\\u044B\\u043B\\u0438 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443 \", params.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [post.id, \". \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isComLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: comment.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: comment.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostIdPage, \"yhVFi/dKHvoi/BwHUNtWcOvaQkM=\", false, function () {\n  return [useParams, useFetching, useFetching];\n});\n\n_c = PostIdPage;\nexport default PostIdPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"sources":["/Users/ilyabrodovsky/Documents/react/react-practice-app/src/pages/PostIdPage.jsx"],"names":["React","useEffect","useState","useParams","PostService","Loader","useFetching","PostIdPage","params","post","setPost","comments","setComments","fetchPostById","isLoading","error","id","response","getById","data","fetchComments","isComLoading","comError","getCommentsByPostId","title","map","comment","marginTop","email","body"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,WAAT,QAA4B,sBAA5B;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,aAAD,EAAgBC,SAAhB,EAA2BC,KAA3B,IAAoCT,WAAW,CAAC,MAAOU,EAAP,IAAc;AAClE,UAAMC,QAAQ,GAAG,MAAMb,WAAW,CAACc,OAAZ,CAAoBF,EAApB,CAAvB;AACAN,IAAAA,OAAO,CAACO,QAAQ,CAACE,IAAV,CAAP;AACD,GAHoD,CAArD;AAIA,QAAM,CAACC,aAAD,EAAgBC,YAAhB,EAA8BC,QAA9B,IAA0ChB,WAAW,CAAC,MAAOU,EAAP,IAAc;AACxE,UAAMC,QAAQ,GAAG,MAAMb,WAAW,CAACmB,mBAAZ,CAAgCP,EAAhC,CAAvB;AACAJ,IAAAA,WAAW,CAACK,QAAQ,CAACE,IAAV,CAAX;AACD,GAH0D,CAA3D;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,aAAa,CAACL,MAAM,CAACQ,EAAR,CAAb;AACAI,IAAAA,aAAa,CAACZ,MAAM,CAACQ,EAAR,CAAb;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA,4BACE;AAAA,8HAAyBR,MAAM,CAACQ,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,SAAS,gBACR,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR;AAAA,iBACGL,IAAI,CAACO,EADR,QACcP,IAAI,CAACe,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,EAUGH,YAAY,gBACT,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADS,gBAET;AAAA,gBACGV,QAAQ,CAACc,GAAT,CAAaC,OAAO,iBAEjB;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAAZ;AAAA,gCACI;AAAA,oBAAKD,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAMF,OAAO,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH;AADH;AAAA;AAAA;AAAA;AAAA,YAZN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA1CD;;GAAMtB,U;UACWJ,S,EAG2BG,W,EAIMA,W;;;KAR5CC,U;AA4CN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport { useFetching } from \"../hooks/useFetching\";\nconst PostIdPage = () => {\n  const params = useParams();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [fetchPostById, isLoading, error] = useFetching(async (id) => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n  const [fetchComments, isComLoading, comError] = useFetching(async (id) => {\n    const response = await PostService.getCommentsByPostId(id);\n    setComments(response.data);\n  });\n  useEffect(() => {\n    fetchPostById(params.id);\n    fetchComments(params.id);\n  }, []);\n\n  return (\n    <div>\n      <h1>Вы открыли страницу {params.id}</h1>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div>\n          {post.id}. {post.title}\n        </div>\n      )}\n      <h1>Comments</h1>\n      {isComLoading\n        ? <Loader/>\n        : <div>\n            {comments.map(comment => \n                \n                <div style={{marginTop: '15px'}}>\n                    <h5>{comment.email}</h5>\n                    <div>{comment.body}</div>\n                </div>\n            )}\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default PostIdPage;\n"]},"metadata":{},"sourceType":"module"}